{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/webpack/bootstrap","webpack://mesto-project-ff/webpack/runtime/publicPath","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/index.js","webpack://mesto-project-ff/./src/components/cards.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.p = \"\";","const validationConfig = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__submit',\r\n  inactiveButtonClass: 'popup__submit_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__error_visible'\r\n};\r\n\r\n// Регулярное выражение для поля \"Название\" (латиница, кириллица, дефисы, пробелы)\r\nconst validPattern = /^[а-яёa-z\\s-]+$/i;\r\n\r\n// Показывает ошибку под инпутом\r\nfunction showInputError(formElement, inputElement, errorMessage, validationConfig) {\r\n  const errorElement = formElement.querySelector(`.${inputElement.name}-error`);\r\n  inputElement.classList.add(validationConfig.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(validationConfig.errorClass);\r\n}\r\n\r\n// Скрывает ошибку под инпутом\r\nfunction hideInputError(formElement, inputElement, validationConfig) {\r\n  const errorElement = formElement.querySelector(`.${inputElement.name}-error`);\r\n  inputElement.classList.remove(validationConfig.inputErrorClass);\r\n  errorElement.textContent = '';\r\n  errorElement.classList.remove(validationConfig.errorClass);\r\n}\r\n\r\n// Проверяет валидность конкретного инпута в зависимости от формы\r\nfunction checkInputValidity(formElement, inputElement, validationConfig) {\r\n  const value = inputElement.value.trim();\r\n\r\n  if (!value) {\r\n    inputElement.setCustomValidity('');\r\n    if (!inputElement.validity.valid) {\r\n      showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\r\n    } else {\r\n      hideInputError(formElement, inputElement, validationConfig);\r\n    }\r\n    return;\r\n  }\r\n\r\n  if (formElement.getAttribute('name') === 'new-place') {\r\n    // Валидация формы \"Новое место\"\r\n    if (inputElement.name === 'place-name') {\r\n      if (!validPattern.test(value)) {\r\n        const message = 'Разрешены только латинские, кириллические буквы, дефисы и пробелы';\r\n        inputElement.setCustomValidity(message);\r\n        showInputError(formElement, inputElement, message, validationConfig);\r\n        return;\r\n      }\r\n      if (value.length < 2 || value.length > 30) {\r\n        const message = 'Должно быть от 2 до 30 символов';\r\n        inputElement.setCustomValidity(message);\r\n        showInputError(formElement, inputElement, message, validationConfig);\r\n        return;\r\n      }\r\n    } else if (inputElement.name === 'link') {\r\n      // Проверка валидного URL через стандартную валидацию браузера\r\n      inputElement.setCustomValidity('');\r\n      if (!inputElement.validity.valid) {\r\n        showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\r\n        return;\r\n      }\r\n    }\r\n  } else if (formElement.getAttribute('name') === 'edit-profile') {\r\n    // Валидация формы \"Редактировать профиль\"\r\n    if ((inputElement.name === 'name' || inputElement.name === 'description') && !validPattern.test(value)) {\r\n      const message = 'Разрешены только латинские, кириллические буквы, дефисы и пробелы';\r\n      inputElement.setCustomValidity(message);\r\n      showInputError(formElement, inputElement, message, validationConfig);\r\n      return;\r\n    }\r\n    if (inputElement.name === 'name' && (value.length < 2 || value.length > 40)) {\r\n      const message = 'Должно быть от 2 до 40 символов';\r\n      inputElement.setCustomValidity(message);\r\n      showInputError(formElement, inputElement, message, validationConfig);\r\n      return;\r\n    }\r\n    if (inputElement.name === 'description' && (value.length < 2 || value.length > 200)) {\r\n      const message = 'Должно быть от 2 до 200 символов';\r\n      inputElement.setCustomValidity(message);\r\n      showInputError(formElement, inputElement, message, validationConfig);\r\n      return;\r\n    }\r\n  }\r\n\r\n  // Если ошибок нет, сбрасываем кастомное сообщение и ошибки\r\n  inputElement.setCustomValidity('');\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\r\n  } else {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n  }\r\n}\r\n\r\n// Проверяет, есть ли невалидные поля в форме\r\nfunction hasInvalidInput(inputList) {\r\n  return inputList.some((inputElement) => !inputElement.validity.valid);\r\n}\r\n\r\n// Активирует или деактивирует кнопку сабмита\r\nfunction toggleButtonState(inputList, buttonElement, validationConfig) {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n    buttonElement.disabled = true;\r\n  } else {\r\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n    buttonElement.disabled = false;\r\n  }\r\n}\r\n\r\n// Назначает обработчики всем инпутам формы\r\nfunction setEventListeners(formElement, validationConfig) {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n\r\n  toggleButtonState(inputList, buttonElement, validationConfig);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', () => {\r\n      checkInputValidity(formElement, inputElement, validationConfig);\r\n      toggleButtonState(inputList, buttonElement, validationConfig);\r\n    });\r\n  });\r\n}\r\n\r\n// Включает валидацию для всех форм на странице\r\nfunction enableValidation(validationConfig) {\r\n  const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n  formList.forEach((formElement) => {\r\n    formElement.addEventListener('submit', (evt) => {\r\n      evt.preventDefault();\r\n    });\r\n    setEventListeners(formElement, validationConfig);\r\n  });\r\n}\r\n\r\n// Очищает ошибки и деактивирует кнопку (для вызова при открытии формы)\r\nfunction clearValidation(formElement, validationConfig) {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n    inputElement.setCustomValidity('');\r\n  });\r\n\r\n  buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n  buttonElement.disabled = true;\r\n}\r\n\r\nexport { enableValidation, clearValidation, validationConfig };","// Функция создания карточки \r\nfunction createCard(cardData, handleDeleteCard, handleLikeCard, handleCardClick) { \r\n  const cardTemplate = document.querySelector('#card-template').content.querySelector('.card'); \r\n  const cardElement = cardTemplate.cloneNode(true); \r\n\r\n  const cardImage = cardElement.querySelector('.card__image'); \r\n  const cardTitle = cardElement.querySelector('.card__title'); \r\n  const deleteButton = cardElement.querySelector('.card__delete-button'); \r\n  const likeButton = cardElement.querySelector('.card__like-button'); \r\n\r\n  cardImage.src = cardData.link; \r\n  cardImage.alt = cardData.name; \r\n  cardTitle.textContent = cardData.name; \r\n\r\n  // Обработчик клика по изображению карточки\r\n  cardImage.addEventListener('click', () => {\r\n    handleCardClick(cardData.link, cardData.name);\r\n  });\r\n\r\n  // Обработчики лайка и удаления карточки \r\n  deleteButton.addEventListener('click', () => { \r\n    handleDeleteCard(cardElement); \r\n  }); \r\n\r\n  likeButton.addEventListener('click', () => { \r\n    handleLikeCard(likeButton); \r\n  }); \r\n\r\n  // Возвращаем элемент карточки \r\n  return cardElement; \r\n} \r\n\r\n// Функция обработки лайка \r\nfunction handleLikeCard(likeButton) { \r\n  likeButton.classList.toggle('card__like-button_is-active'); \r\n} \r\n\r\n// Функция удаления карточки \r\nfunction handleDeleteCard(cardElement) { \r\n  cardElement.remove(); \r\n} \r\n\r\n// Экспортируем функции \r\nexport { createCard, handleLikeCard, handleDeleteCard };","// Обработчик закрытия по Escape\r\nfunction handleCloseByEscape(evt) {\r\n  if (evt.key === 'Escape') {\r\n    const openedPopup = document.querySelector('.popup_is-opened');\r\n    if (openedPopup) {\r\n      closePopup(openedPopup);\r\n    }\r\n  }\r\n}\r\n\r\n// Функция открытия попапа\r\nfunction openPopup(popup) {\r\n  popup.classList.add('popup_is-opened');\r\n  document.addEventListener('keydown', handleCloseByEscape);\r\n}\r\n\r\n// Функция закрытия попапа\r\nfunction closePopup(popup) {\r\n  popup.classList.remove('popup_is-opened');\r\n  document.removeEventListener('keydown', handleCloseByEscape);\r\n}\r\n\r\n// Обработчик закрытия по клику на оверлей\r\nfunction setPopupCloseByOverlay(popup) {\r\n  popup.addEventListener('mousedown', (evt) => {\r\n    if (evt.target === popup) {\r\n      closePopup(popup);\r\n    }\r\n  });\r\n}\r\n\r\n// Экспортируем функции\r\nexport { openPopup, closePopup, setPopupCloseByOverlay };","// @todo: Темплейт карточки\r\n\r\n// @todo: DOM узлы\r\n\r\n// @todo: Функция создания карточки\r\n\r\n// @todo: Функция удаления карточки\r\n\r\n// @todo: Вывести карточки на страницу\r\n\r\nimport './pages/index.css';\r\nimport { enableValidation, clearValidation, validationConfig } from './components/validation.js';\r\nimport { initialCards } from './components/cards.js';\r\nimport { createCard, handleLikeCard, handleDeleteCard } from './components/card.js';\r\nimport { openPopup, closePopup, setPopupCloseByOverlay } from './components/modal.js';\r\n\r\nimport logo from './images/logo.svg';\r\nimport avatar from './images/avatar.jpg';\r\n\r\nconsole.log('Hello, World!');\r\n\r\n// Установка логотипа и аватара \r\nconst logoImg = document.querySelector('.header__logo');\r\nlogoImg.src = logo;\r\n\r\nconst profileImage = document.querySelector('.profile__image');\r\nprofileImage.style.backgroundImage = `url(${avatar})`;\r\n\r\n// Получение элементов попапов и кнопок \r\nconst editButton = document.querySelector('.profile__edit-button');\r\nconst addButton = document.querySelector('.profile__add-button');\r\nconst popupEdit = document.querySelector('.popup_type_edit');\r\nconst popupNewCard = document.querySelector('.popup_type_new-card');\r\nconst popupImage = document.querySelector('.popup_type_image');\r\n\r\nconst placesList = document.querySelector('.places__list');\r\n\r\n// --- Определяем коллекцию всех попапов --- \r\nconst popups = document.querySelectorAll('.popup');\r\n\r\n// --- Добавляем класс для плавной анимации открытия/закрытия попапов --- \r\npopups.forEach(popup => {\r\n  popup.classList.add('popup_is-animated');\r\n});\r\n\r\n// --- Установка закрытия по оверлею для всех попапов --- \r\npopups.forEach(setPopupCloseByOverlay);\r\n\r\n// --- Функция открытия попапа с большим изображением --- \r\nfunction openImagePopup(link, name) {\r\n  const image = popupImage.querySelector('.popup__image');\r\n  const caption = popupImage.querySelector('.popup__caption');\r\n\r\n  image.src = link;\r\n  image.alt = name;\r\n  caption.textContent = name;\r\n\r\n  openPopup(popupImage);\r\n}\r\n\r\n// --- Рендер карточек --- \r\nfunction renderCards(cards) {\r\n  cards.forEach(cardData => {\r\n    const cardElement = createCard(cardData, handleDeleteCard, handleLikeCard, openImagePopup);\r\n    placesList.append(cardElement);\r\n  });\r\n}\r\n\r\n// --- Инициализация карточек --- \r\nrenderCards(initialCards);\r\n\r\n// --- Работа с формами --- \r\nconst formEditProfile = popupEdit.querySelector('.popup__form');\r\nconst nameInput = popupEdit.querySelector('input[name=\"name\"]');\r\nconst descriptionInput = popupEdit.querySelector('input[name=\"description\"]');\r\nconst profileName = document.querySelector('.profile__title');\r\nconst profileDescription = document.querySelector('.profile__description');\r\n\r\nconst formNewPlace = popupNewCard.querySelector('.popup__form');\r\nconst placeNameInput = popupNewCard.querySelector('input[name=\"place-name\"]');\r\nconst placeLinkInput = popupNewCard.querySelector('input[name=\"link\"]');\r\n\r\n// Обработчики открытия попапов с формами с очисткой ошибок и деактивацией кнопки\r\neditButton.addEventListener('click', () => {\r\n  openPopup(popupEdit);\r\n  nameInput.value = profileName.textContent;\r\n  descriptionInput.value = profileDescription.textContent;\r\n  clearValidation(formEditProfile, validationConfig);\r\n});\r\n\r\naddButton.addEventListener('click', () => {\r\n  openPopup(popupNewCard);\r\n  formNewPlace.reset();\r\n  clearValidation(formNewPlace, validationConfig);\r\n});\r\n\r\n// Обработчики закрытия попапов по кнопке крестика \r\nconst closeButtons = document.querySelectorAll('.popup__close');\r\ncloseButtons.forEach(button => {\r\n  button.addEventListener('click', () => {\r\n    const popup = button.closest('.popup');\r\n    closePopup(popup);\r\n  });\r\n});\r\n\r\n// Обработчик сабмита формы редактирования профиля \r\nformEditProfile.addEventListener('submit', (evt) => {\r\n  evt.preventDefault();\r\n  profileName.textContent = nameInput.value;\r\n  profileDescription.textContent = descriptionInput.value;\r\n  closePopup(popupEdit);\r\n});\r\n\r\n// Обработчик сабмита формы добавления новой карточки \r\nformNewPlace.addEventListener('submit', (evt) => {\r\n  evt.preventDefault();\r\n\r\n  const newCardData = {\r\n    name: placeNameInput.value,\r\n    link: placeLinkInput.value\r\n  };\r\n\r\n  const cardElement = createCard(newCardData, handleDeleteCard, handleLikeCard, openImagePopup);\r\n\r\n  placesList.prepend(cardElement);\r\n  formNewPlace.reset();\r\n  clearValidation(formNewPlace, validationConfig);\r\n  closePopup(popupNewCard);\r\n});\r\n\r\n// Включаем валидацию для всех форм\r\nenableValidation(validationConfig);","export const initialCards = [\r\n    {\r\n      name: \"Архыз\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg\",\r\n    },\r\n    {\r\n      name: \"Челябинская область\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg\",\r\n    },\r\n    {\r\n      name: \"Иваново\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg\",\r\n    },\r\n    {\r\n      name: \"Камчатка\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg\",\r\n    },\r\n    {\r\n      name: \"Холмогорский район\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg\",\r\n    },\r\n    {\r\n      name: \"Байкал\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg\",\r\n    }\r\n];\r\n\r\n"],"names":["__webpack_require__","validationConfig","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","validPattern","showInputError","formElement","inputElement","errorMessage","errorElement","querySelector","concat","name","classList","add","textContent","hideInputError","remove","toggleButtonState","inputList","buttonElement","some","validity","valid","hasInvalidInput","disabled","clearValidation","Array","from","querySelectorAll","forEach","setCustomValidity","createCard","cardData","handleDeleteCard","handleLikeCard","handleCardClick","cardElement","document","content","cloneNode","cardImage","cardTitle","deleteButton","likeButton","src","link","alt","addEventListener","toggle","handleCloseByEscape","evt","key","openedPopup","closePopup","openPopup","popup","removeEventListener","console","log","logo","style","backgroundImage","avatar","editButton","addButton","popupEdit","popupNewCard","popupImage","placesList","popups","openImagePopup","image","caption","target","append","formEditProfile","nameInput","descriptionInput","profileName","profileDescription","formNewPlace","placeNameInput","placeLinkInput","value","reset","button","closest","preventDefault","prepend","trim","validationMessage","getAttribute","test","message","length","checkInputValidity","setEventListeners","enableValidation"],"sourceRoot":""}