{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/webpack/bootstrap","webpack://mesto-project-ff/webpack/runtime/publicPath","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/index.js","webpack://mesto-project-ff/./src/components/cards.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.p = \"\";","// Функция создания карточки \r\nfunction createCard(cardData, handleDeleteCard, handleLikeCard, handleCardClick) { \r\n  const cardTemplate = document.querySelector('#card-template').content.querySelector('.card'); \r\n  const cardElement = cardTemplate.cloneNode(true); \r\n\r\n  const cardImage = cardElement.querySelector('.card__image'); \r\n  const cardTitle = cardElement.querySelector('.card__title'); \r\n  const deleteButton = cardElement.querySelector('.card__delete-button'); \r\n  const likeButton = cardElement.querySelector('.card__like-button'); \r\n\r\n  cardImage.src = cardData.link; \r\n  cardImage.alt = cardData.name; \r\n  cardTitle.textContent = cardData.name; \r\n\r\n  // Обработчик клика по изображению карточки\r\n  cardImage.addEventListener('click', () => {\r\n    handleCardClick(cardData.link, cardData.name);\r\n  });\r\n\r\n  // Обработчики лайка и удаления карточки \r\n  deleteButton.addEventListener('click', () => { \r\n    handleDeleteCard(cardElement); \r\n  }); \r\n\r\n  likeButton.addEventListener('click', () => { \r\n    handleLikeCard(likeButton); \r\n  }); \r\n\r\n  // Возвращаем элемент карточки \r\n  return cardElement; \r\n} \r\n\r\n// Функция обработки лайка \r\nfunction handleLikeCard(likeButton) { \r\n  likeButton.classList.toggle('card__like-button_is-active'); \r\n} \r\n\r\n// Функция удаления карточки \r\nfunction handleDeleteCard(cardElement) { \r\n  cardElement.remove(); \r\n} \r\n\r\n// Экспортируем функции \r\nexport { createCard, handleLikeCard, handleDeleteCard };","// Обработчик закрытия по Escape\r\nfunction handleCloseByEscape(evt) {\r\n  if (evt.key === 'Escape') {\r\n    const openedPopup = document.querySelector('.popup_is-opened');\r\n    if (openedPopup) {\r\n      closePopup(openedPopup);\r\n    }\r\n  }\r\n}\r\n\r\n// Функция открытия попапа\r\nfunction openPopup(popup) {\r\n  popup.classList.add('popup_is-opened');\r\n  document.addEventListener('keydown', handleCloseByEscape);\r\n}\r\n\r\n// Функция закрытия попапа\r\nfunction closePopup(popup) {\r\n  popup.classList.remove('popup_is-opened');\r\n  document.removeEventListener('keydown', handleCloseByEscape);\r\n}\r\n\r\n// Обработчик закрытия по клику на оверлей\r\nfunction setPopupCloseByOverlay(popup) {\r\n  popup.addEventListener('mousedown', (evt) => {\r\n    if (evt.target === popup) {\r\n      closePopup(popup);\r\n    }\r\n  });\r\n}\r\n\r\n// Экспортируем функции\r\nexport { openPopup, closePopup, setPopupCloseByOverlay };","// @todo: Темплейт карточки\r\n\r\n// @todo: DOM узлы\r\n\r\n// @todo: Функция создания карточки\r\n\r\n// @todo: Функция удаления карточки\r\n\r\n// @todo: Вывести карточки на страницу\r\n\r\nimport './pages/index.css'; \r\n\r\nimport { initialCards } from './components/cards.js'; \r\nimport { createCard, handleLikeCard, handleDeleteCard } from './components/card.js'; \r\nimport { openPopup, closePopup, setPopupCloseByOverlay } from './components/modal.js'; \r\n\r\nimport logo from './images/logo.svg'; \r\nimport avatar from './images/avatar.jpg'; \r\n\r\nconsole.log('Hello, World!'); \r\n\r\n// Установка логотипа и аватара \r\nconst logoImg = document.querySelector('.header__logo'); \r\nlogoImg.src = logo; \r\n\r\nconst profileImage = document.querySelector('.profile__image'); \r\nprofileImage.style.backgroundImage = `url(${avatar})`; \r\n\r\n// Получение элементов попапов и кнопок \r\nconst editButton = document.querySelector('.profile__edit-button'); \r\nconst addButton = document.querySelector('.profile__add-button'); \r\nconst popupEdit = document.querySelector('.popup_type_edit'); \r\nconst popupNewCard = document.querySelector('.popup_type_new-card'); \r\nconst popupImage = document.querySelector('.popup_type_image'); \r\n\r\nconst placesList = document.querySelector('.places__list'); \r\n\r\n// --- Определяем коллекцию всех попапов --- \r\nconst popups = document.querySelectorAll('.popup'); \r\n\r\n// --- Добавляем класс для плавной анимации открытия/закрытия попапов --- \r\npopups.forEach(popup => {\r\n  popup.classList.add('popup_is-animated');\r\n});\r\n\r\n// --- Установка закрытия по оверлею для всех попапов --- \r\npopups.forEach(setPopupCloseByOverlay); \r\n\r\n// --- Функция открытия попапа с большим изображением --- \r\nfunction openImagePopup(link, name) { \r\n  const image = popupImage.querySelector('.popup__image'); \r\n  const caption = popupImage.querySelector('.popup__caption'); \r\n\r\n  image.src = link; \r\n  image.alt = name; \r\n  caption.textContent = name; \r\n\r\n  openPopup(popupImage); \r\n} \r\n\r\n// --- Рендер карточек --- \r\nfunction renderCards(cards) { \r\n  cards.forEach(cardData => { \r\n    // Передаём в createCard функции для удаления, лайка и открытия изображения\r\n    const cardElement = createCard(cardData, handleDeleteCard, handleLikeCard, openImagePopup); \r\n\r\n    // Обработчик клика по изображению добавляется внутри createCard\r\n\r\n    placesList.append(cardElement); \r\n  }); \r\n} \r\n\r\n// --- Инициализация карточек --- \r\nrenderCards(initialCards); \r\n\r\n// --- Работа с формами --- \r\nconst formEditProfile = popupEdit.querySelector('.popup__form'); \r\nconst nameInput = popupEdit.querySelector('input[name=\"name\"]'); \r\nconst descriptionInput = popupEdit.querySelector('input[name=\"description\"]'); \r\nconst profileName = document.querySelector('.profile__title'); \r\nconst profileDescription = document.querySelector('.profile__description'); \r\n\r\nconst formNewPlace = popupNewCard.querySelector('.popup__form'); \r\nconst placeNameInput = popupNewCard.querySelector('input[name=\"place-name\"]'); \r\nconst placeLinkInput = popupNewCard.querySelector('input[name=\"link\"]'); \r\n\r\n// Обработчики открытия попапов с формами \r\neditButton.addEventListener('click', () => { \r\n  openPopup(popupEdit); \r\n  nameInput.value = profileName.textContent; \r\n  descriptionInput.value = profileDescription.textContent; \r\n}); \r\n\r\naddButton.addEventListener('click', () => { \r\n  openPopup(popupNewCard); \r\n  formNewPlace.reset(); \r\n}); \r\n\r\n// Обработчики закрытия попапов по кнопке крестика \r\nconst closeButtons = document.querySelectorAll('.popup__close'); \r\ncloseButtons.forEach(button => { \r\n  button.addEventListener('click', () => { \r\n    const popup = button.closest('.popup'); \r\n    closePopup(popup); \r\n  }); \r\n}); \r\n\r\n// Обработчик сабмита формы редактирования профиля \r\nformEditProfile.addEventListener('submit', (evt) => { \r\n  evt.preventDefault(); \r\n  profileName.textContent = nameInput.value; \r\n  profileDescription.textContent = descriptionInput.value; \r\n  closePopup(popupEdit); \r\n}); \r\n\r\n// Обработчик сабмита формы добавления новой карточки \r\nformNewPlace.addEventListener('submit', (evt) => { \r\n  evt.preventDefault(); \r\n\r\n  const newCardData = { \r\n    name: placeNameInput.value, \r\n    link: placeLinkInput.value \r\n  }; \r\n\r\n  // Передаём openImagePopup в createCard для добавления обработчика клика по изображению\r\n  const cardElement = createCard(newCardData, handleDeleteCard, handleLikeCard, openImagePopup); \r\n\r\n  placesList.prepend(cardElement); \r\n  formNewPlace.reset(); \r\n  closePopup(popupNewCard); \r\n}); \r\n\r\n\r\n","export const initialCards = [\r\n    {\r\n      name: \"Архыз\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg\",\r\n    },\r\n    {\r\n      name: \"Челябинская область\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg\",\r\n    },\r\n    {\r\n      name: \"Иваново\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg\",\r\n    },\r\n    {\r\n      name: \"Камчатка\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg\",\r\n    },\r\n    {\r\n      name: \"Холмогорский район\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg\",\r\n    },\r\n    {\r\n      name: \"Байкал\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg\",\r\n    }\r\n];\r\n\r\n"],"names":["__webpack_require__","createCard","cardData","handleDeleteCard","handleLikeCard","handleCardClick","cardElement","document","querySelector","content","cloneNode","cardImage","cardTitle","deleteButton","likeButton","src","link","alt","name","textContent","addEventListener","classList","toggle","remove","handleCloseByEscape","evt","key","openedPopup","closePopup","openPopup","popup","add","removeEventListener","console","log","logo","style","backgroundImage","concat","avatar","editButton","addButton","popupEdit","popupNewCard","popupImage","placesList","popups","querySelectorAll","openImagePopup","image","caption","forEach","target","append","formEditProfile","nameInput","descriptionInput","profileName","profileDescription","formNewPlace","placeNameInput","placeLinkInput","value","reset","button","closest","preventDefault","prepend"],"sourceRoot":""}